{
  "name": "Receipt Processing (Simple)",
  "nodes": [
    {
      "parameters": {
        "path": "E:\\Personal Finance Receipt Sorter\\Personal-Finance-Receipt-Sorter\\inbox",
        "watchForFileChanges": true,
        "watchForFolderChanges": false
      },
      "id": "s1c8b7a5-1234-4567-8901-123456789012",
      "name": "Folder Trigger",
      "type": "n8n-nodes-base.localFileTrigger",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "filePath": "={{ $json.path }}",
        "options": {}
      },
      "id": "s2c8b7a5-1234-4567-8901-123456789012",
      "name": "Read File",
      "type": "n8n-nodes-base.readBinaryFile",
      "typeVersion": 1,
      "position": [440, 300]
    },
    {
      "parameters": {
        "resource": "chat",
        "operation": "create",
        "model": "gpt-4o-mini",
        "messages": {
          "values": [
            {
              "role": "system",
              "content": "You are a receipt parsing assistant. Extract key information from receipt text and return it in the specified JSON format."
            },
            {
              "role": "user",
              "content": "=Extract the following fields from this receipt text:\n\n{{ $json.data.toString() }}"
            }
          ]
        },
        "functions": {
          "values": [
            {
              "name": "parse_receipt",
              "description": "Extract key data from a purchase receipt",
              "parameters": {
                "type": "object",
                "properties": {
                  "vendor": {
                    "type": "string",
                    "description": "The store or vendor name"
                  },
                  "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Purchase date in YYYY-MM-DD format"
                  },
                  "total": {
                    "type": "number",
                    "description": "Total amount paid"
                  },
                  "tax": {
                    "type": "number",
                    "description": "Tax amount"
                  },
                  "currency": {
                    "type": "string",
                    "default": "USD",
                    "description": "Currency code"
                  },
                  "payment_method": {
                    "type": "string",
                    "description": "Payment method used"
                  },
                  "category": {
                    "type": "string",
                    "enum": ["Groceries", "Dining", "Travel", "Utilities", "Shopping", "Gas", "Healthcare", "Entertainment", "Other"],
                    "description": "Spending category"
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {"type": "string"},
                        "price": {"type": "number"},
                        "quantity": {"type": "number", "default": 1}
                      }
                    }
                  }
                },
                "required": ["vendor", "date", "total", "category"]
              }
            }
          ]
        },
        "functionCall": "parse_receipt"
      },
      "id": "s3c8b7a5-1234-4567-8901-123456789012",
      "name": "OpenAI Parse",
      "type": "n8n-nodes-base.openAi",
      "typeVersion": 1,
      "position": [640, 300]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "receipt_data",
              "name": "receipt_data",
              "value": "={{ JSON.parse($json.choices[0].message.function_call.arguments) }}",
              "type": "object"
            },
            {
              "id": "source_file",
              "name": "source_file",
              "value": "={{ $('Folder Trigger').item.json.path }}",
              "type": "string"
            }
          ]
        }
      },
      "id": "s4c8b7a5-1234-4567-8901-123456789012",
      "name": "Format Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3,
      "position": [840, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://localhost:3001/store-receipt",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "contentType": "json",
        "body": "={{ $json.receipt_data }}",
        "options": {}
      },
      "id": "s5c8b7a5-1234-4567-8901-123456789012",
      "name": "Store Receipt",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [1040, 300]
    }
  ],
  "connections": {
    "Folder Trigger": {
      "main": [
        [
          {
            "node": "Read File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read File": {
      "main": [
        [
          {
            "node": "OpenAI Parse",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Parse": {
      "main": [
        [
          {
            "node": "Format Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Data": {
      "main": [
        [
          {
            "node": "Store Receipt",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-07-01T04:30:00.000Z",
  "versionId": "1"
} 